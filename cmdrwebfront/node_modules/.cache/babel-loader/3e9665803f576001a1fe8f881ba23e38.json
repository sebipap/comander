{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\pages\\\\menu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Container, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Menu = () => {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://192.168.1.60:5000/api/plate/all\").then(res => res.json()).then(res => setMenuItems(res));\n  }, []);\n  const categoryNames = [...new Set(menuItems.map(item => item.category))];\n  const categories = categoryNames.map(name => {\n    return {\n      name: name,\n      items: menuItems.filter(item => item.category == name)\n    };\n  }).reverse();\n  const [selectedItem, setSelectedItem] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"col-12\",\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        as: motion.div,\n        style: {\n          height: \"22rem\",\n          float: \"left\",\n          borderRadius: 10,\n          margin: 20\n        },\n        layoutId: item._id,\n        onClick: () => setSelectedItem(item),\n        className: \"bg-dark text-white col-3 \",\n        sm: true,\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          as: motion.img,\n          src: item.imgURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n          as: motion.div,\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            as: motion.h2,\n            style: {\n              textShadow: \"px 3px 0 #969696, 1px 13px 5px #aba8a8, 0px 0px 18px #000000\"\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            as: motion.p,\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            as: motion.button,\n            variant: \"primary\",\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedItem && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"black\",\n            position: \"fixed\",\n            top: 0,\n            opacity: 0.5\n          },\n          onClick: () => setSelectedItem(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          as: motion.div,\n          style: {\n            position: \"fixed\",\n            top: \"0%\",\n            left: \"0%\",\n            margin: 20\n          },\n          layoutId: selectedItem._id,\n          onClick: () => setSelectedItem(selectedItem),\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            as: motion.img,\n            variant: \"top\",\n            src: selectedItem.imgURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            as: motion.div,\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              as: motion.h2,\n              children: selectedItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: motion.p,\n              children: selectedItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: motion.button,\n              variant: \"primary\",\n              children: [\"$\", selectedItem.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); // return categories.map((cat) => (\n  //   <>\n  //     <h1>{cat.name}</h1>\n  //     {cat.items.map((item) => (\n  //       <Plate plate={item} />\n  //     ))}\n  //   </>\n  // ));\n};\n\n_s(Menu, \"JQu81IgtiWazq0rsR+NDPuAbWeM=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/pages/menu/index.js"],"names":["AnimatePresence","motion","React","useEffect","useState","Button","Card","Container","Modal","Menu","menuItems","setMenuItems","fetch","then","res","json","categoryNames","Set","map","item","category","categories","name","items","filter","reverse","selectedItem","setSelectedItem","div","height","float","borderRadius","margin","_id","img","imgURL","h2","textShadow","p","description","button","price","width","backgroundColor","position","top","opacity","left"],"mappings":"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","sourcesContent":["import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Container, Modal } from \"react-bootstrap\";\r\n\r\nexport const Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.60:5000/api/plate/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => setMenuItems(res));\r\n  }, []);\r\n\r\n  const categoryNames = [...new Set(menuItems.map((item) => item.category))];\r\n\r\n  const categories = categoryNames\r\n    .map((name) => {\r\n      return {\r\n        name: name,\r\n        items: menuItems.filter((item) => item.category == name),\r\n      };\r\n    })\r\n    .reverse();\r\n\r\n\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <Container  className=\"col-12\">\r\n        {menuItems.map((item) => (\r\n            <Card\r\n              as={motion.div}\r\n              style={{ height:\"22rem\", float: \"left\", borderRadius: 10, margin:20 }}\r\n              layoutId={item._id}\r\n              onClick={() => setSelectedItem(item)}\r\n\t\t\t\t\t\t\tclassName=\"bg-dark text-white col-3 \"\r\n\t\t\t\t\t\t\tsm\r\n            >\r\n              <Card.Img as={motion.img} src={item.imgURL}  />\r\n              <Card.ImgOverlay as={motion.div} >\r\n                <Card.Title as={motion.h2} style={{textShadow: \"px 3px 0 #969696, 1px 13px 5px #aba8a8, 0px 0px 18px #000000\"}}>{item.name}</Card.Title>\r\n                <Card.Text as={motion.p}>{item.description}</Card.Text>\r\n                <Button as={motion.button} variant=\"primary\">\r\n                  ${item.price}\r\n                </Button>\r\n              </Card.ImgOverlay>\r\n            </Card>\r\n        ))}\r\n      </Container>\r\n      <AnimatePresence>\r\n        {selectedItem && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<motion.div style={{width:\"100%\", height:\"100%\", backgroundColor:\"black\", position: \"fixed\", top:0,opacity: 0.5}} onClick={() => setSelectedItem(null)}/>\r\n          <Card\r\n            as={motion.div}\r\n            style={{position: \"fixed\", top:\"0%\", left:\"0%\", margin:20 }}\r\n            layoutId={selectedItem._id}\r\n            onClick={() => setSelectedItem(selectedItem)}\r\n          >\r\n            <Card.Img as={motion.img} variant=\"top\" src={selectedItem.imgURL} />\r\n            <Card.Body as={motion.div}>\r\n              <Card.Title as={motion.h2}>{selectedItem.name}</Card.Title>\r\n              <Card.Text as={motion.p}>{selectedItem.description}</Card.Text>\r\n              <Button as={motion.button} variant=\"primary\">\r\n                ${selectedItem.price}\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n\t\t\t\t\t</>\r\n\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n\r\n  // return categories.map((cat) => (\r\n  //   <>\r\n  //     <h1>{cat.name}</h1>\r\n  //     {cat.items.map((item) => (\r\n  //       <Plate plate={item} />\r\n  //     ))}\r\n  //   </>\r\n  // ));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}