{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrwebfront\\\\src\\\\pages\\\\menu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Heading, SimpleGrid, Text, useToast, Stack, VStack, Link } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { MenuItem } from \"./menuItem\";\nimport { getAllMenuItems } from \"../../scripts/GetAllMenuItems\";\nimport MenuSideBar from \"./menuSideBar\";\nimport Scroll from \"react-scroll\";\nimport { ShoppingCart } from \"./shoppingCart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar scroller = Scroll.scroller;\nexport const Menu = () => {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  const [shoppingCart, setShoppingCart] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  useEffect(() => scroller.scrollTo(selectedCategory, {\n    duration: 10000,\n    delay: 100,\n    smooth: true,\n    offset: -120\n  }), [selectedCategory]);\n  useEffect(() => getAllMenuItems().then(res => setMenuItems(res)), []);\n  const toast = useToast();\n\n  const addToShoppingCart = course => {\n    setShoppingCart(shoppingCart.concat(course));\n    toast({\n      title: `Se ${course.amount > 1 ? `han añadido al pedido ${course.amount}` : \"ha añadido al pedido un\"} ${course.menuItemName} `,\n      position: \"top\",\n      duration: 1000,\n      status: \"success\"\n    });\n  };\n\n  const remove = course => {\n    setShoppingCart(shoppingCart.filter(aCourse => aCourse != course));\n  };\n\n  const clearShoppingCart = () => setShoppingCart([]);\n\n  const categoryNames = [...new Set(menuItems.map(item => item.category.name))];\n  const categories = categoryNames.map(name => {\n    return {\n      name,\n      items: menuItems.filter(item => item.category.name === name)\n    };\n  }).filter(cat => cat.name);\n\n  const Category = props => {\n    const {\n      name,\n      items\n    } = props.category;\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: \"10\",\n      mb: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        id: name,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: [1, 2, 3, 4],\n        spacing: \"40px\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          item: item,\n          addToShoppingCart: addToShoppingCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Categories = () => categories.map(cat => /*#__PURE__*/_jsxDEV(Category, {\n    category: cat\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 52\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MenuSideBar, {\n      ShoppingCart: () => /*#__PURE__*/_jsxDEV(ShoppingCart, {\n        shoppingCart: shoppingCart,\n        remove: remove,\n        clearShoppingCart: clearShoppingCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this),\n      SideBarContents: () => /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 25,\n          mb: \"10\",\n          mt: \"3\",\n          fontWeight: \"400\",\n          children: \"Categor\\xEDas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          m: 2,\n          children: categories.map(cat => /*#__PURE__*/_jsxDEV(Link, {\n            w: \"100%\",\n            fontSize: \"lg\",\n            fontWeight: \"500\",\n            p: \"2\",\n            rounded: \"lg\",\n            bgColor: selectedCategory == cat.name && \"blue.700\",\n            color: selectedCategory == cat.name && \"white\",\n            colorScheme: \"teal\",\n            onClick: () => setSelectedCategory(cat.name),\n            children: cat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this),\n      BodyContents: () => /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"5\",\n          children: \"Productos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Menu, \"Jv2TsZVfddozjKmY37nejjDyJdg=\", false, function () {\n  return [useToast];\n});\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrwebfront/src/pages/menu/index.js"],"names":["Box","Heading","SimpleGrid","Text","useToast","Stack","VStack","Link","React","useEffect","useState","MenuItem","getAllMenuItems","MenuSideBar","Scroll","ShoppingCart","scroller","Menu","menuItems","setMenuItems","shoppingCart","setShoppingCart","selectedCategory","setSelectedCategory","scrollTo","duration","delay","smooth","offset","then","res","toast","addToShoppingCart","course","concat","title","amount","menuItemName","position","status","remove","filter","aCourse","clearShoppingCart","categoryNames","Set","map","item","category","name","categories","items","cat","Category","props","Categories"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  useToast,\r\n  Stack,\r\n  VStack,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MenuItem } from \"./menuItem\";\r\nimport { getAllMenuItems } from \"../../scripts/GetAllMenuItems\";\r\nimport MenuSideBar from \"./menuSideBar\";\r\nimport Scroll from \"react-scroll\";\r\nimport { ShoppingCart } from \"./shoppingCart\";\r\n\r\nvar scroller = Scroll.scroller;\r\n\r\nexport const Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [shoppingCart, setShoppingCart] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  useEffect(\r\n    () =>\r\n      scroller.scrollTo(selectedCategory, {\r\n        duration: 10000,\r\n        delay: 100,\r\n        smooth: true,\r\n        offset: -120,\r\n      }),\r\n    [selectedCategory]\r\n  );\r\n\r\n  useEffect(() => getAllMenuItems().then((res) => setMenuItems(res)), []);\r\n\r\n  const toast = useToast();\r\n\r\n  const addToShoppingCart = (course) => {\r\n    setShoppingCart(shoppingCart.concat(course));\r\n    toast({\r\n      title: `Se ${\r\n        course.amount > 1\r\n          ? `han añadido al pedido ${course.amount}`\r\n          : \"ha añadido al pedido un\"\r\n      } ${course.menuItemName} `,\r\n      position: \"top\",\r\n      duration: 1000,\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const remove = (course) => {\r\n    setShoppingCart(shoppingCart.filter((aCourse) => aCourse != course));\r\n  };\r\n\r\n  const clearShoppingCart = () => setShoppingCart([]);\r\n\r\n  const categoryNames = [\r\n    ...new Set(menuItems.map((item) => item.category.name)),\r\n  ];\r\n  const categories = categoryNames\r\n    .map((name) => {\r\n      return {\r\n        name,\r\n        items: menuItems.filter((item) => item.category.name === name),\r\n      };\r\n    })\r\n    .filter((cat) => cat.name);\r\n\r\n  const Category = (props) => {\r\n    const { name, items } = props.category;\r\n    return (\r\n      <Stack spacing=\"10\" mb=\"10\">\r\n        <hr />\r\n        <Heading size=\"lg\" id={name}>\r\n          {name}\r\n        </Heading>\r\n        <SimpleGrid columns={[1, 2, 3, 4]} spacing=\"40px\">\r\n          {items.map((item) => (\r\n            <MenuItem item={item} addToShoppingCart={addToShoppingCart} />\r\n          ))}\r\n        </SimpleGrid>\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  const Categories = () => categories.map((cat) => <Category category={cat} />);\r\n\r\n  return (\r\n    <>\r\n      <MenuSideBar\r\n        ShoppingCart={() => (\r\n          <ShoppingCart\r\n            shoppingCart={shoppingCart}\r\n            remove={remove}\r\n            clearShoppingCart={clearShoppingCart}\r\n          />\r\n        )}\r\n        SideBarContents={() => (\r\n          <Box  w=\"100%\">\r\n            <Text fontSize={25} mb=\"10\" mt=\"3\" fontWeight={\"400\"}>\r\n              Categorías\r\n            </Text>\r\n            <VStack m={2}>\r\n              {categories.map((cat) => (\r\n                <Link\r\n                  w=\"100%\"\r\n                  fontSize={\"lg\"}\r\n                  fontWeight=\"500\"\r\n                  p=\"2\"\r\n                  rounded=\"lg\"\r\n                  bgColor={selectedCategory == cat.name && \"blue.700\"}\r\n                  color={selectedCategory == cat.name && \"white\"}\r\n                  colorScheme=\"teal\"\r\n                  onClick={() => setSelectedCategory(cat.name)}\r\n                >\r\n                  {cat.name}\r\n                </Link>\r\n              ))}\r\n            </VStack>\r\n          </Box>\r\n        )}\r\n        BodyContents={() => (\r\n          <Box>\r\n            <Heading mb=\"5\">Productos</Heading>\r\n            <Categories />\r\n          </Box>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}