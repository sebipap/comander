{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\pages\\\\menu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Container, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Menu = () => {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://192.168.1.60:5000/api/plate/all\").then(res => res.json()).then(res => setMenuItems(res));\n  }, []);\n  const categoryNames = [...new Set(menuItems.map(item => item.category))];\n  const categories = categoryNames.map(name => {\n    return {\n      name: name,\n      items: menuItems.filter(item => item.category == name)\n    };\n  }).reverse();\n  const [selectedItem, setSelectedItem] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"col-12\",\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        as: motion.div,\n        style: {\n          height: \"22rem\",\n          float: \"left\",\n          margin: 20,\n          backgroundSize: \"100%\",\n          border: 'solid white 3px'\n        },\n        layoutId: item._id,\n        onClick: () => setSelectedItem(item),\n        className: \"col-4\",\n        rounded: true,\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          as: motion.img,\n          src: item.imgURL,\n          variant: \"top\",\n          className: \"rounded shadow\",\n          style: {\n            objectFit: \"cover\",\n            height: \"70%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          as: motion.div,\n          children: /*#__PURE__*/_jsxDEV(motion.h4, {\n            style: {\n              textShadow: \"px 3px 0 #969696, 1px 13px 5px #aba8a8, 0px 0px 18px #000000\"\n            },\n            children: [item.name, /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedItem && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"white\",\n            position: \"fixed\",\n            top: 0\n          },\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 0.5\n          },\n          onClick: () => setSelectedItem(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          as: motion.div,\n          style: {\n            position: \"fixed\",\n            top: \"0%\",\n            left: \"0%\",\n            margin: 20\n          },\n          layoutId: selectedItem._id,\n          onClick: () => setSelectedItem(selectedItem),\n          className: \"shadow-lg \",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            as: motion.img,\n            variant: \"top\",\n            src: selectedItem.imgURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            as: motion.div,\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              as: motion.h2,\n              children: selectedItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: motion.p,\n              children: selectedItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: motion.button,\n              variant: \"primary\",\n              children: [\"$\", selectedItem.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); // return categories.map((cat) => (\n  //   <>\n  //     <h1>{cat.name}</h1>\n  //     {cat.items.map((item) => (\n  //       <Plate plate={item} />\n  //     ))}\n  //   </>\n  // ));\n};\n\n_s(Menu, \"JQu81IgtiWazq0rsR+NDPuAbWeM=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/pages/menu/index.js"],"names":["AnimatePresence","motion","React","useEffect","useState","Button","Card","Container","Modal","Menu","menuItems","setMenuItems","fetch","then","res","json","categoryNames","Set","map","item","category","categories","name","items","filter","reverse","selectedItem","setSelectedItem","div","height","float","margin","backgroundSize","border","_id","img","imgURL","objectFit","textShadow","price","width","backgroundColor","position","top","opacity","left","h2","p","description","button"],"mappings":"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","sourcesContent":["import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Container, Modal } from \"react-bootstrap\";\r\n\r\nexport const Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.60:5000/api/plate/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => setMenuItems(res));\r\n  }, []);\r\n\r\n  const categoryNames = [...new Set(menuItems.map((item) => item.category))];\r\n\r\n  const categories = categoryNames\r\n    .map((name) => {\r\n      return {\r\n        name: name,\r\n        items: menuItems.filter((item) => item.category == name),\r\n      };\r\n    })\r\n    .reverse();\r\n\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"col-12\">\r\n        {menuItems.map((item) => (\r\n          <Card\r\n            as={motion.div}\r\n            style={{\r\n              height: \"22rem\",\r\n              float: \"left\",\r\n              margin: 20,\r\n              backgroundSize: \"100%\",\r\n\t\t\t\t\t\t\tborder: 'solid white 3px'\r\n            }}\r\n            layoutId={item._id}\r\n            onClick={() => setSelectedItem(item)}\r\n            className=\"col-4\"\r\n            rounded\r\n          >\r\n            <Card.Img\r\n              as={motion.img}\r\n              src={item.imgURL}\r\n              variant=\"top\"\r\n\t\t\t\t\t\t\tclassName=\"rounded shadow\"\r\n              style={{ \r\n\t\t\t\t\t\t\t\tobjectFit: \"cover\",\r\n\t\t\t\t\t\t\t\theight: \"70%\",\r\n\t\t\t\t\t\t\t}}\r\n            />\r\n            <Card.Body as={motion.div}>\r\n              <motion.h4\r\n                style={{\r\n                  textShadow:\r\n                    \"px 3px 0 #969696, 1px 13px 5px #aba8a8, 0px 0px 18px #000000\",\r\n                }}\r\n              >\r\n                {item.name}\r\n\t\t\t\t\t\t\t\t<Badge bg=\"secondary\">${item.price}</Badge>\r\n              </motion.h4>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n        ))}\r\n      </Container>\r\n      <AnimatePresence>\r\n        {selectedItem && (\r\n          <>\r\n            <motion.div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundColor: \"white\",\r\n                position: \"fixed\",\r\n                top: 0,\r\n              }}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 0.5 }}\r\n              onClick={() => setSelectedItem(null)}\r\n            />\r\n            <Card\r\n              as={motion.div}\r\n              style={{ position: \"fixed\", top: \"0%\", left: \"0%\", margin: 20 }}\r\n              layoutId={selectedItem._id}\r\n              onClick={() => setSelectedItem(selectedItem)}\r\n              className=\"shadow-lg \"\r\n            >\r\n              <Card.Img\r\n                as={motion.img}\r\n                variant=\"top\"\r\n                src={selectedItem.imgURL}\r\n              />\r\n              <Card.Body as={motion.div}>\r\n                <Card.Title as={motion.h2}>{selectedItem.name}</Card.Title>\r\n                <Card.Text as={motion.p}>{selectedItem.description}</Card.Text>\r\n                <Button as={motion.button} variant=\"primary\">\r\n                  ${selectedItem.price}\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n\r\n  // return categories.map((cat) => (\r\n  //   <>\r\n  //     <h1>{cat.name}</h1>\r\n  //     {cat.items.map((item) => (\r\n  //       <Plate plate={item} />\r\n  //     ))}\r\n  //   </>\r\n  // ));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}