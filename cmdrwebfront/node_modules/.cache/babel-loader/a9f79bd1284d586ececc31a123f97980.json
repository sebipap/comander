{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\pages\\\\menu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Menu = () => {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://192.168.1.60:5000/api/plate/all\").then(res => res.json()).then(res => setMenuItems(res));\n  }, []);\n  const categoryNames = [...new Set(menuItems.map(item => item.category))];\n  const categories = categoryNames.map(name => {\n    return {\n      name: name,\n      items: menuItems.filter(item => item.category == name)\n    };\n  }).reverse();\n\n  const Plate = props => {\n    const {\n      name,\n      description,\n      price,\n      imgURL\n    } = props.plate; // return (\n    //   <Card style={{ width: 500 }}>\n    //     <Card.Img variant=\"top\" src={imgURL} />\n    //     <Card.Body>\n    //       <Card.Title>{name}</Card.Title>\n    //       <Card.Text>{description}</Card.Text>\n    //       <h2>${price}</h2>\n    //     </Card.Body>\n    //   </Card>\n    // );\n  };\n\n  const [selectedItem, setSelectedItem] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"block\"\n      },\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          as: motion.div,\n          style: {\n            width: \"18rem\"\n          },\n          layoutId: item._id,\n          onClick: () => setSelectedItem(item),\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            as: motion.img,\n            variant: \"top\",\n            src: item.imgURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            as: motion.div,\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              as: motion.h2,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: motion.p,\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: motion.button,\n              variant: \"primary\",\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedItem && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"black\",\n            position: \"absolute\",\n            top: 0\n          },\n          onClick: () => setSelectedItem(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          as: motion.div,\n          style: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            margin: 20\n          },\n          layoutId: selectedItem._id,\n          onClick: () => setSelectedItem(selectedItem),\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            as: motion.img,\n            variant: \"top\",\n            src: selectedItem.imgURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            as: motion.div,\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              as: motion.h2,\n              children: selectedItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: motion.p,\n              children: selectedItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: motion.button,\n              variant: \"primary\",\n              children: [\"$\", selectedItem.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); // return categories.map((cat) => (\n  //   <>\n  //     <h1>{cat.name}</h1>\n  //     {cat.items.map((item) => (\n  //       <Plate plate={item} />\n  //     ))}\n  //   </>\n  // ));\n};\n\n_s(Menu, \"JQu81IgtiWazq0rsR+NDPuAbWeM=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/pages/menu/index.js"],"names":["AnimatePresence","motion","React","useEffect","useState","Button","Card","Modal","Menu","menuItems","setMenuItems","fetch","then","res","json","categoryNames","Set","map","item","category","categories","name","items","filter","reverse","Plate","props","description","price","imgURL","plate","selectedItem","setSelectedItem","display","div","width","_id","img","h2","p","button","height","backgroundColor","position","top","left","margin"],"mappings":"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","sourcesContent":["import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Modal } from \"react-bootstrap\";\r\n\r\nexport const Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.60:5000/api/plate/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => setMenuItems(res));\r\n  }, []);\r\n\r\n  const categoryNames = [...new Set(menuItems.map((item) => item.category))];\r\n\r\n  const categories = categoryNames\r\n    .map((name) => {\r\n      return {\r\n        name: name,\r\n        items: menuItems.filter((item) => item.category == name),\r\n      };\r\n    })\r\n    .reverse();\r\n\r\n  const Plate = (props) => {\r\n    const { name, description, price, imgURL } = props.plate;\r\n\r\n    // return (\r\n    //   <Card style={{ width: 500 }}>\r\n    //     <Card.Img variant=\"top\" src={imgURL} />\r\n\r\n    //     <Card.Body>\r\n    //       <Card.Title>{name}</Card.Title>\r\n    //       <Card.Text>{description}</Card.Text>\r\n    //       <h2>${price}</h2>\r\n    //     </Card.Body>\r\n    //   </Card>\r\n    // );\r\n  };\r\n\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: \"block\" }}>\r\n        {menuItems.map((item) => (\r\n          <>\r\n            <Card\r\n              as={motion.div}\r\n              style={{ width: \"18rem\" }}\r\n              layoutId={item._id}\r\n              onClick={() => setSelectedItem(item)}\r\n            >\r\n              <Card.Img as={motion.img} variant=\"top\" src={item.imgURL} />\r\n              <Card.Body as={motion.div}>\r\n                <Card.Title as={motion.h2}>{item.name}</Card.Title>\r\n                <Card.Text as={motion.p}>{item.description}</Card.Text>\r\n                <Button as={motion.button} variant=\"primary\">\r\n                  ${item.price}\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </>\r\n        ))}\r\n      </div>\r\n      <AnimatePresence>\r\n        {selectedItem && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div style={{width:\"100%\", height:\"100%\", backgroundColor:\"black\", position: \"absolute\", top:0}} onClick={() => setSelectedItem(null)}/>\r\n          <Card\r\n            as={motion.div}\r\n            style={{position: \"fixed\", top:0, left:0, margin:20 }}\r\n            layoutId={selectedItem._id}\r\n            onClick={() => setSelectedItem(selectedItem)}\r\n          >\r\n            <Card.Img as={motion.img} variant=\"top\" src={selectedItem.imgURL} />\r\n            <Card.Body as={motion.div}>\r\n              <Card.Title as={motion.h2}>{selectedItem.name}</Card.Title>\r\n              <Card.Text as={motion.p}>{selectedItem.description}</Card.Text>\r\n              <Button as={motion.button} variant=\"primary\">\r\n                ${selectedItem.price}\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n\t\t\t\t\t</>\r\n\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n\r\n  // return categories.map((cat) => (\r\n  //   <>\r\n  //     <h1>{cat.name}</h1>\r\n  //     {cat.items.map((item) => (\r\n  //       <Plate plate={item} />\r\n  //     ))}\r\n  //   </>\r\n  // ));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}