{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\pages\\\\menu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Heading, HStack, Image, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { MenuNav } from \"./menuNav\";\nimport { PlateIcon } from \"./plateIcon\";\nimport { PlateWindow } from \"./plateWindow\";\nimport { ShoppingCart } from \"./shoppingCart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Menu = () => {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  const [shoppingCart, setShoppingCart] = useState([]);\n  useEffect(() => {\n    fetch(\"http://192.168.1.60:5000/api/plate/all\").then(res => res.json()).then(res => setMenuItems(res));\n  }, []);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const addToShoppingCart = (amount, courseId) => {\n    setShoppingCart(shoppingCart.concat({\n      plate: selectedItem,\n      amount,\n      extra: null,\n      courseId\n    }));\n    setSelectedItem(null);\n  };\n\n  const remove = course => {\n    setShoppingCart(shoppingCart.filter(aCourse => aCourse != course));\n  };\n\n  const categoryNames = [...new Set(menuItems.map(item => item.category))];\n  const categories = categoryNames.map(name => {\n    return {\n      name,\n      items: menuItems.filter(item => item.category === name)\n    };\n  }).filter(cat => cat.name);\n\n  const Category = props => {\n    const {\n      name,\n      items\n    } = props.category;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      m: \"5\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        m: \"5\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: [1, 2, 3],\n        spacing: \"40px\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => setSelectedItem(\"pepe\"),\n            children: /*#__PURE__*/_jsxDEV(PlateIcon, {\n              item: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), item == selectedItem && /*#__PURE__*/_jsxDEV(PlateWindow, {\n            setSelectedItem: setSelectedItem,\n            item: selectedItem,\n            addToShoppingCart: addToShoppingCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) // selectedItem == item ? (\n        //   <>\n        //     <PlateWindow\n        //       setSelectedItem={setSelectedItem}\n        //       item={selectedItem}\n        //       addToShoppingCart={addToShoppingCart}\n        //     />\n        //     <motion.div height=\"400\" transition={{ delay: 0 }} />\n        //   </>\n        // ) : (\n        //   <>\n        //     <PlateIcon item={item} setSelectedItem={setSelectedItem} />\n        //   </>\n        // )\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Categories = () => categories.map(cat => /*#__PURE__*/_jsxDEV(Category, {\n    category: cat\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 52\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pt: \"20\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), shoppingCart == [] && /*#__PURE__*/_jsxDEV(ShoppingCart, {\n        shoppingCart: shoppingCart,\n        remove: remove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Menu, \"YzVJsHe+lT8yvwFySUMrQRx06Z0=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/pages/menu/index.js"],"names":["Box","Heading","HStack","Image","SimpleGrid","Text","AnimatePresence","motion","React","useEffect","useState","MenuNav","PlateIcon","PlateWindow","ShoppingCart","Menu","menuItems","setMenuItems","shoppingCart","setShoppingCart","fetch","then","res","json","selectedItem","setSelectedItem","addToShoppingCart","amount","courseId","concat","plate","extra","remove","course","filter","aCourse","categoryNames","Set","map","item","category","categories","name","items","cat","Category","props","Categories"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Heading,\r\n  HStack,\r\n  Image,\r\n  SimpleGrid,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MenuNav } from \"./menuNav\";\r\nimport { PlateIcon } from \"./plateIcon\";\r\nimport { PlateWindow } from \"./plateWindow\";\r\nimport { ShoppingCart } from \"./shoppingCart\";\r\n\r\nexport const Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [shoppingCart, setShoppingCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.60:5000/api/plate/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => setMenuItems(res));\r\n  }, []);\r\n\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const addToShoppingCart = (amount, courseId) => {\r\n    setShoppingCart(\r\n      shoppingCart.concat({\r\n        plate: selectedItem,\r\n        amount,\r\n        extra: null,\r\n        courseId,\r\n      })\r\n    );\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  const remove = (course) => {\r\n    setShoppingCart(shoppingCart.filter((aCourse) => aCourse != course));\r\n  };\r\n\r\n  const categoryNames = [...new Set(menuItems.map((item) => item.category))];\r\n  const categories = categoryNames\r\n    .map((name) => {\r\n      return {\r\n        name,\r\n        items: menuItems.filter((item) => item.category === name),\r\n      };\r\n    })\r\n    .filter((cat) => cat.name);\r\n\r\n  const Category = (props) => {\r\n    const { name, items } = props.category;\r\n    return (\r\n      <Box m=\"5\">\r\n        <Box m=\"5\">\r\n          <Heading as=\"h3\">{name}</Heading>\r\n        </Box>\r\n        <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n          {items.map(\r\n            (item) => (\r\n              <>\r\n                <Box onClick={() => setSelectedItem(\"pepe\")}>\r\n                  <PlateIcon item={item}  />\r\n                </Box>\r\n                {item == selectedItem && (\r\n                  <PlateWindow\r\n                    setSelectedItem={setSelectedItem}\r\n                    item={selectedItem}\r\n                    addToShoppingCart={addToShoppingCart}\r\n                  />\r\n                )}\r\n              </>\r\n            )\r\n\r\n            // selectedItem == item ? (\r\n            //   <>\r\n            //     <PlateWindow\r\n            //       setSelectedItem={setSelectedItem}\r\n            //       item={selectedItem}\r\n            //       addToShoppingCart={addToShoppingCart}\r\n            //     />\r\n            //     <motion.div height=\"400\" transition={{ delay: 0 }} />\r\n            //   </>\r\n            // ) : (\r\n            //   <>\r\n            //     <PlateIcon item={item} setSelectedItem={setSelectedItem} />\r\n            //   </>\r\n            // )\r\n          )}\r\n        </SimpleGrid>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const Categories = () => categories.map((cat) => <Category category={cat} />);\r\n\r\n  return (\r\n    <>\r\n      <MenuNav />\r\n      <Box pt=\"20\">\r\n        <Categories />\r\n        {shoppingCart == [] && (\r\n          <ShoppingCart shoppingCart={shoppingCart} remove={remove} />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}