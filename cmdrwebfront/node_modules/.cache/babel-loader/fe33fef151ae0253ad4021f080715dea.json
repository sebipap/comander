{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\pages\\\\menu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Menu = () => {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://192.168.1.60:5000/api/plate/all\").then(res => res.json()).then(res => setMenuItems(res));\n  }, []);\n  const categoryNames = [...new Set(menuItems.map(item => item.category))];\n  const categories = categoryNames.map(name => {\n    return {\n      name: name,\n      items: menuItems.filter(item => item.category == name)\n    };\n  }).reverse();\n\n  const Plate = props => {\n    const {\n      name,\n      description,\n      price,\n      imgURL\n    } = props.plate; // return (\n    //   <Card style={{ width: 500 }}>\n    //     <Card.Img variant=\"top\" src={imgURL} />\n    //     <Card.Body>\n    //       <Card.Title>{name}</Card.Title>\n    //       <Card.Text>{description}</Card.Text>\n    //       <h2>${price}</h2>\n    //     </Card.Body>\n    //   </Card>\n    // );\n  };\n\n  const [selectedId, setSelectedId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [menuItems.map(item => /*#__PURE__*/_jsxDEV(motion.div, {\n      layoutId: item._id,\n      onClick: () => setSelectedId(item._id),\n      animate: {\n        scale: 1.1\n      },\n      children: [/*#__PURE__*/_jsxDEV(motion.h5, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(motion.h2, {\n        children: item.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(motion.h5, {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedId && /*#__PURE__*/_jsxDEV(motion.Card, {\n        layoutId: selectedId,\n        children: [/*#__PURE__*/_jsxDEV(motion.h5, {\n          children: \"item.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(motion.h2, {\n          children: \"item.price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          onClick: () => setSelectedId(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); // return categories.map((cat) => (\n  //   <>\n  //     <h1>{cat.name}</h1>\n  //     {cat.items.map((item) => (\n  //       <Plate plate={item} />\n  //     ))}\n  //   </>\n  // ));\n};\n\n_s(Menu, \"h23pzoqx1NTAycC0jtqG+bwJcZs=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/pages/menu/index.js"],"names":["AnimatePresence","motion","React","useEffect","useState","Card","Menu","menuItems","setMenuItems","fetch","then","res","json","categoryNames","Set","map","item","category","categories","name","items","filter","reverse","Plate","props","description","price","imgURL","plate","selectedId","setSelectedId","_id","scale"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,MAA1B,QAAwC,eAAxC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAASH,YAAY,CAACG,GAAD,CAF7B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAME,aAAa,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQP,SAAS,CAACQ,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACC,QAA7B,CAAR,CAAJ,CAAtB;AAEA,QAAMC,UAAU,GAAGL,aAAa,CAC7BE,GADgB,CACXI,IAAD,IAAU;AACb,WAAO;AACLA,MAAAA,IAAI,EAAEA,IADD;AAELC,MAAAA,KAAK,EAAEb,SAAS,CAACc,MAAV,CAAkBL,IAAD,IAAUA,IAAI,CAACC,QAAL,IAAiBE,IAA5C;AAFF,KAAP;AAID,GANgB,EAOhBG,OAPgB,EAAnB;;AASA,QAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA,WAAR;AAAqBC,MAAAA,KAArB;AAA4BC,MAAAA;AAA5B,QAAuCH,KAAK,CAACI,KAAnD,CADuB,CAGvB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAdD;;AAgBA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,IAAD,CAA5C;AAEA,sBACE;AAAA,eACGG,SAAS,CAACQ,GAAV,CAAeC,IAAD,iBACb,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,QAAQ,EAAEA,IAAI,CAACe,GAA3B;AAAgC,MAAA,OAAO,EAAE,MAAMD,aAAa,CAACd,IAAI,CAACe,GAAN,CAA5D;AAAwE,MAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAjF;AAAA,8BAWE,QAAC,MAAD,CAAQ,EAAR;AAAA,kBAAYhB,IAAI,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,MAAD,CAAQ,EAAR;AAAA,kBAAYH,IAAI,CAACU;AAAjB;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,MAAD,CAAQ,EAAR;AAAA,kBAAYV,IAAI,CAACS;AAAjB;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAmBE,QAAC,eAAD;AAAA,gBACGI,UAAU,iBACT,QAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,QAAQ,EAAEA,UAAvB;AAAA,gCACE,QAAC,MAAD,CAAQ,EAAR;AAAA,oBAAY;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD,CAAQ,EAAR;AAAA,oBAAY;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD,CAAQ,MAAR;AAAe,UAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF,CAtCwB,CAsExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA9EM;;GAAMxB,I;;KAAAA,I","sourcesContent":["import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport const Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.60:5000/api/plate/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => setMenuItems(res));\r\n  }, []);\r\n\r\n  const categoryNames = [...new Set(menuItems.map((item) => item.category))];\r\n\r\n  const categories = categoryNames\r\n    .map((name) => {\r\n      return {\r\n        name: name,\r\n        items: menuItems.filter((item) => item.category == name),\r\n      };\r\n    })\r\n    .reverse();\r\n\r\n  const Plate = (props) => {\r\n    const { name, description, price, imgURL } = props.plate;\r\n\r\n    // return (\r\n    //   <Card style={{ width: 500 }}>\r\n    //     <Card.Img variant=\"top\" src={imgURL} />\r\n\r\n    //     <Card.Body>\r\n    //       <Card.Title>{name}</Card.Title>\r\n    //       <Card.Text>{description}</Card.Text>\r\n    //       <h2>${price}</h2>\r\n    //     </Card.Body>\r\n    //   </Card>\r\n    // );\r\n  };\r\n\r\n  const [selectedId, setSelectedId] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      {menuItems.map((item) => (\r\n        <motion.div layoutId={item._id} onClick={() => setSelectedId(item._id)} animate={{ scale: 1.1}}>\r\n          {/* <Card style={{ width: 500 }}>\r\n            <Card.Img variant=\"top\" src={item.imgURL} />\r\n\r\n            <Card.Body>\r\n              <Card.Title>{item.name}</Card.Title>\r\n              <Card.Text>{item.description}</Card.Text>\r\n              <h2>${item.price}</h2>\r\n            </Card.Body>\r\n          </Card> */}\r\n\r\n          <motion.h5>{item.name}</motion.h5>\r\n          <motion.h2>{item.price}</motion.h2>\r\n          <motion.h5>{item.description}</motion.h5>\r\n        </motion.div>\r\n      ))}\r\n\r\n      <AnimatePresence>\r\n        {selectedId && (\r\n          <motion.Card layoutId={selectedId}>\r\n            <motion.h5>{\"item.name\"}</motion.h5>\r\n            <motion.h2>{\"item.price\"}</motion.h2>\r\n            <motion.button onClick={() => setSelectedId(null)} />\r\n          </motion.Card>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n\r\n  // return categories.map((cat) => (\r\n  //   <>\r\n  //     <h1>{cat.name}</h1>\r\n  //     {cat.items.map((item) => (\r\n  //       <Plate plate={item} />\r\n  //     ))}\r\n  //   </>\r\n  // ));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}