{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\pages\\\\menu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Badge, Box, Button, Heading, Image, Modal, ModalBody, ModalContent, ModalOverlay, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Menu = () => {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://192.168.1.60:5000/api/plate/all\").then(res => res.json()).then(res => setMenuItems(res));\n  }, []);\n  const categoryNames = [...new Set(menuItems.map(item => item.category))];\n  const categories = categoryNames.map(name => {\n    return {\n      name: name,\n      items: menuItems.filter(item => item.category == name)\n    };\n  }).reverse();\n  const [selectedItem, setSelectedItem] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: [1, 2, 3],\n      spacing: \"40px\",\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        as: motion.div,\n        style: {\n          height: \"400px\",\n          backgroundSize: \"100%\"\n        },\n        onClick: () => setSelectedItem(item),\n        layoutId: item.token,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          as: motion.div,\n          layoutId: item._id,\n          style: {\n            height: \"70%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: item.imgURL,\n            variant: \"top\",\n            className: \"rounded-lg \",\n            style: {\n              objectFit: \"cover\",\n              height: \"100%\",\n              width: \"100%\",\n              borderRadius: 15\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          as: motion.div,\n          layoutId: item.name,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              textAlign: \"center\",\n              margin: 10\n            },\n            children: [item.name, \" \", /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              as: motion.span,\n              layoutId: item.price,\n              children: [\" \", \"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedItem && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: selectedItem,\n          onClose: () => setSelectedItem(null),\n          as: motion.div // style={{\n          //   position: \"fixed\",\n          //   top: \"0%\",\n          //   left: \"0%\",\n          //   marginLeft: \"20%\",\n          //   marginTop: \"10%\",\n          //   padding: 20,\n          //   background: \"white\",\n          //   width: \"60%\",\n          //   maxHeight: \"60%\",\n          //   borderRadius: 20,\n          // }}\n          ,\n          onClick: () => setSelectedItem(selectedItem),\n          className: \"shadow-lg \",\n          layoutId: selectedItem.token,\n          children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n            children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n              children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n                columns: [1, 2],\n                spacing: 10,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    as: motion.div,\n                    layoutId: selectedItem._id,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      as: motion.img,\n                      variant: \"top\",\n                      src: selectedItem.imgURL,\n                      style: {\n                        borderRadius: 20\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    as: motion.div,\n                    layoutId: selectedItem.name,\n                    children: /*#__PURE__*/_jsxDEV(Heading, {\n                      size: \"lg\",\n                      children: selectedItem.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    marginTop: 10,\n                    children: selectedItem.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      as: motion.div,\n                      layoutId: selectedItem.price,\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        pill: true,\n                        children: [\"$\", selectedItem.price]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    colorScheme: \"blue\",\n                    children: \"Button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Menu, \"JQu81IgtiWazq0rsR+NDPuAbWeM=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/pages/menu/index.js"],"names":["Badge","Box","Button","Heading","Image","Modal","ModalBody","ModalContent","ModalOverlay","SimpleGrid","Text","AnimatePresence","motion","React","useEffect","useState","Menu","menuItems","setMenuItems","fetch","then","res","json","categoryNames","Set","map","item","category","categories","name","items","filter","reverse","selectedItem","setSelectedItem","div","height","backgroundSize","token","_id","imgURL","objectFit","width","borderRadius","textAlign","margin","span","price","img","description"],"mappings":"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","sourcesContent":["import { Badge, Box, Button, Heading, Image, Modal, ModalBody, ModalContent, ModalOverlay, SimpleGrid, Text } from \"@chakra-ui/react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport const Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.60:5000/api/plate/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => setMenuItems(res));\r\n  }, []);\r\n\r\n  const categoryNames = [...new Set(menuItems.map((item) => item.category))];\r\n\r\n  const categories = categoryNames\r\n    .map((name) => {\r\n      return {\r\n        name: name,\r\n        items: menuItems.filter((item) => item.category == name),\r\n      };\r\n    })\r\n    .reverse();\r\n\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\r\n        {menuItems.map((item) => (\r\n          <Box\r\n            as={motion.div}\r\n            style={{\r\n              height: \"400px\",\r\n              backgroundSize: \"100%\",\r\n            }}\r\n            onClick={() => setSelectedItem(item)}\r\n            layoutId={item.token}\r\n          >\r\n            <Box as={motion.div} layoutId={item._id} style={{ height: \"70%\" }}>\r\n              <Image\r\n                src={item.imgURL}\r\n                variant=\"top\"\r\n                className=\"rounded-lg \"\r\n                style={{\r\n                  objectFit: \"cover\",\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  borderRadius: 15,\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box as={motion.div} layoutId={item.name}>\r\n              <h4 style={{ textAlign: \"center\", margin: 10 }}>\r\n                {item.name}{\" \"}\r\n                <Badge pill as={motion.span} layoutId={item.price}>\r\n                  {\" \"}\r\n                  ${item.price}\r\n                </Badge>\r\n              </h4>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n      </SimpleGrid>\r\n      <AnimatePresence>\r\n        {selectedItem && (\r\n          <>\r\n            {/* <Box\r\n              as={motion.div}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundColor: \"white\",\r\n                position: \"fixed\",\r\n                top: 0,\r\n              }}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 0.5 }}\r\n              onClick={() => setSelectedItem(null)}\r\n            /> */}\r\n            <Modal\r\n              isOpen={selectedItem}\r\n              onClose={() => setSelectedItem(null)}\r\n              as={motion.div}\r\n              // style={{\r\n              //   position: \"fixed\",\r\n              //   top: \"0%\",\r\n              //   left: \"0%\",\r\n              //   marginLeft: \"20%\",\r\n              //   marginTop: \"10%\",\r\n              //   padding: 20,\r\n              //   background: \"white\",\r\n              //   width: \"60%\",\r\n              //   maxHeight: \"60%\",\r\n              //   borderRadius: 20,\r\n              // }}\r\n              onClick={() => setSelectedItem(selectedItem)}\r\n              className=\"shadow-lg \"\r\n              layoutId={selectedItem.token}\r\n            >\r\n                      <ModalOverlay />\r\n              <ModalContent>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n\r\n              <SimpleGrid columns={[1, 2]} spacing={10}>\r\n                <Box>\r\n                  <Box as={motion.div} layoutId={selectedItem._id}>\r\n                    <img\r\n                      as={motion.img}\r\n                      variant=\"top\"\r\n                      src={selectedItem.imgURL}\r\n                      style={{ borderRadius: 20 }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n                <Box>\r\n                  <Box as={motion.div} layoutId={selectedItem.name}>\r\n                    <Heading size=\"lg\">{selectedItem.name}</Heading>\r\n                  </Box>\r\n                  <Text marginTop={10}>{selectedItem.description}</Text>\r\n                  <h2>\r\n                    <Box as={motion.div} layoutId={selectedItem.price}>\r\n                      <Badge pill>${selectedItem.price}</Badge>\r\n                    </Box>\r\n                  </h2>\r\n                  <Button colorScheme=\"blue\">Button</Button>\r\n                </Box>\r\n              </SimpleGrid>\r\n              </ModalBody>\r\n              </ModalContent>\r\n\r\n            </Modal>\r\n          </>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}