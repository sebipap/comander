{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\components\\\\Clock.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Clock = props => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const [from, setFrom] = useState(props.from);\n\n  const incrementTime = () => setTime(Math.round((Date.now() - from) / 1000));\n\n  const tick = () => {\n    setTimeout(() => {\n      incrementTime();\n      tick();\n    }, 1000);\n  };\n\n  useEffect(tick, []);\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: time\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Clock, \"aalMKZAvaa1w4nWbLARhQcY75GU=\");\n\n_c = Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/components/Clock.js"],"names":["useState","useEffect","Clock","props","time","setTime","from","setFrom","incrementTime","Math","round","Date","now","tick","setTimeout"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,OAAO,MAAOC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,KAAK,CAACG,IAAP,CAAhC;;AAEA,QAAME,aAAa,GAAG,MAAMH,OAAO,CAACI,IAAI,CAACC,KAAL,CAAW,CAACC,IAAI,CAACC,GAAL,KAAaN,IAAd,IAAoB,IAA/B,CAAD,CAAnC;;AAEA,QAAMO,IAAI,GAAG,MAAM;AACjBC,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,aAAa;AACbK,MAAAA,IAAI;AACL,KAHS,EAGP,IAHO,CAAV;AAID,GALD;;AAOAZ,EAAAA,SAAS,CAACY,IAAD,EAAO,EAAP,CAAT;AAEA,sBAAO;AAAA,cACLT;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAKM,CApBA;;GAAOF,K;;KAAAA,K","sourcesContent":["import {useState, useEffect} from \"react\"\r\n\r\nexport const  Clock = (props) => {\r\n\tconst [time, setTime] = useState(0)\r\n\tconst [from, setFrom] = useState(props.from)\r\n    \r\n\tconst incrementTime = () => setTime(Math.round((Date.now() - from)/1000))\r\n    \r\n\tconst tick = () => {\r\n\t  setTimeout(() => {\r\n\t    incrementTime()\r\n\t    tick()\r\n\t  }, 1000)\r\n\t}\r\n    \r\n\tuseEffect(tick, [])\r\n    \r\n\treturn <h3>\r\n\t\t{time}\r\n\r\n\t</h3>\r\n\t\t\r\n      }"]},"metadata":{},"sourceType":"module"}