{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebastianWin\\\\dev\\\\comander\\\\cmdrweb\\\\src\\\\pages\\\\menu\\\\shoppingCart.js\",\n    _s = $RefreshSig$();\n\nimport { Text, CloseButton, Stat, StatNumber, StatHelpText, SimpleGrid, Badge, Box, Button, Heading, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, toast, Tag, Stack, HStack, Tooltip } from \"@chakra-ui/react\";\nimport { motion } from \"framer-motion\";\nimport { useEffect } from \"react\";\nimport { calculateCoursePrice } from \"../../scripts/calculateCoursePrice\";\nimport { fullCourseData } from \"../../scripts/fullCourseData\";\nimport { CoursesGroup } from \"./courseGroup\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShoppingCartLine = props => {\n  const {\n    amount,\n    plate,\n    variant,\n    extras,\n    extra\n  } = props.course;\n  const completeCourse = fullCourseData(props.course);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: JSON.stringify(completeCourse)\n  }, void 0, false); // return (\n  //   <Tooltip\n  //     label={`${amount} ${plate.name} ${variant.name} ($${variant.price})\n  //             ${extras.map((extra) => `+ ${extra.name} ($${extra.price})`)}\n  //             ${extra}\n  //     `}\n  //   >\n  //     <Box rounded=\"l\" padding={2} shadow=\"md\">\n  //       <CloseButton\n  //         onClick={() => props.remove(props.course)}\n  //         display=\"inline\"\n  //       />\n  //       <Text fontSize={20}>\n  //         {props.course.amount} {props.course.plate.name}\n  //       </Text>\n  //       <HStack spacing=\"2\">\n  //         <Text display=\"inline\" fontSize={17} color=\"gray\">\n  //           {props.course.variant.name}\n  //         </Text>\n  //         {props.course.extra && <Tag> {props.course.extra}</Tag>}\n  //         {props.course.extras.map((extra) => (\n  //           <Tag>{extra.name}</Tag>\n  //         ))}\n  //       </HStack>\n  //       <Text fontSize={15}></Text>\n  //       <CoursesGroup\n  //         plate={props.course.plate}\n  //         amount={props.course.amount}\n  //         courseId={props.course.courseId + \"shoppingCart\"}\n  //         display=\"inline\"\n  //       />\n  //       <Stat>\n  //         <StatNumber>${calculateCoursePrice(props.course)}</StatNumber>\n  //         <StatHelpText></StatHelpText>\n  //       </Stat>\n  //     </Box>\n  //   </Tooltip>\n  // );\n};\n_c = ShoppingCartLine;\nexport const ShoppingCart = props => {\n  _s();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n\n  const total = () => {\n    let total = 0;\n    props.shoppingCart.map(course => calculateCoursePrice(course)).forEach(x => total += x);\n    return total;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      m: 4,\n      onClick: onOpen,\n      colorScheme: \"green\",\n      children: [\"Ver Pedido (\", props.shoppingCart.length, \")\"]\n    }, \"lg\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: onClose,\n      size: \"lg\",\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            as: motion.div,\n            children: [props.shoppingCart.map(course => /*#__PURE__*/_jsxDEV(ShoppingCartLine, {\n              course: course,\n              remove: props.remove\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n              columns: [1, 2],\n              position: \"sticky\",\n              bottom: \"1vh\",\n              rounded: \"lg\",\n              m: \"5\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                children: \"A\\xF1adir m\\xE1s productos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"green\",\n                children: [\"Pedir ($\", props.shoppingCart != [] ? total() : \"0\", \")\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShoppingCart, \"b6HgRGUKK6FEfELRcVwOTS4RtgI=\", false, function () {\n  return [useDisclosure];\n});\n\n_c2 = ShoppingCart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShoppingCartLine\");\n$RefreshReg$(_c2, \"ShoppingCart\");","map":{"version":3,"sources":["C:/Users/sebastianWin/dev/comander/cmdrweb/src/pages/menu/shoppingCart.js"],"names":["Text","CloseButton","Stat","StatNumber","StatHelpText","SimpleGrid","Badge","Box","Button","Heading","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useDisclosure","toast","Tag","Stack","HStack","Tooltip","motion","useEffect","calculateCoursePrice","fullCourseData","CoursesGroup","ShoppingCartLine","props","amount","plate","variant","extras","extra","course","completeCourse","JSON","stringify","ShoppingCart","isOpen","onOpen","onClose","total","shoppingCart","map","forEach","x","length","div","remove"],"mappings":"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","sourcesContent":["import {\r\n  Text,\r\n  CloseButton,\r\n  Stat,\r\n  StatNumber,\r\n  StatHelpText,\r\n  SimpleGrid,\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n  toast,\r\n  Tag,\r\n  Stack,\r\n  HStack,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\nimport { calculateCoursePrice } from \"../../scripts/calculateCoursePrice\";\r\nimport { fullCourseData } from \"../../scripts/fullCourseData\";\r\nimport { CoursesGroup } from \"./courseGroup\";\r\n\r\nexport const ShoppingCartLine = (props) => {\r\n\r\n\r\n  const { amount, plate, variant, extras, extra } = props.course;\r\n\r\n  const completeCourse = fullCourseData(props.course)\r\n\r\n  return (\r\n    <>\r\n      {JSON.stringify(completeCourse)}\r\n    </>\r\n  )\r\n\r\n  // return (\r\n  //   <Tooltip\r\n  //     label={`${amount} ${plate.name} ${variant.name} ($${variant.price})\r\n  //             ${extras.map((extra) => `+ ${extra.name} ($${extra.price})`)}\r\n  //             ${extra}\r\n  //     `}\r\n  //   >\r\n  //     <Box rounded=\"l\" padding={2} shadow=\"md\">\r\n  //       <CloseButton\r\n  //         onClick={() => props.remove(props.course)}\r\n  //         display=\"inline\"\r\n  //       />\r\n  //       <Text fontSize={20}>\r\n  //         {props.course.amount} {props.course.plate.name}\r\n  //       </Text>\r\n  //       <HStack spacing=\"2\">\r\n  //         <Text display=\"inline\" fontSize={17} color=\"gray\">\r\n  //           {props.course.variant.name}\r\n  //         </Text>\r\n  //         {props.course.extra && <Tag> {props.course.extra}</Tag>}\r\n\r\n  //         {props.course.extras.map((extra) => (\r\n  //           <Tag>{extra.name}</Tag>\r\n  //         ))}\r\n  //       </HStack>\r\n\r\n  //       <Text fontSize={15}></Text>\r\n  //       <CoursesGroup\r\n  //         plate={props.course.plate}\r\n  //         amount={props.course.amount}\r\n  //         courseId={props.course.courseId + \"shoppingCart\"}\r\n  //         display=\"inline\"\r\n  //       />\r\n\r\n  //       <Stat>\r\n  //         <StatNumber>${calculateCoursePrice(props.course)}</StatNumber>\r\n  //         <StatHelpText></StatHelpText>\r\n  //       </Stat>\r\n  //     </Box>\r\n  //   </Tooltip>\r\n  // );\r\n};\r\n\r\nexport const ShoppingCart = (props) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const total = () => {\r\n    let total = 0;\r\n    props.shoppingCart\r\n      .map((course) => calculateCoursePrice(course))\r\n      .forEach((x) => (total += x));\r\n    return total;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button key=\"lg\" m={4} onClick={onOpen} colorScheme=\"green\">\r\n        Ver Pedido ({props.shoppingCart.length})\r\n      </Button>\r\n\r\n      {isOpen && (\r\n        <Modal onClose={onClose} size={\"lg\"} isOpen={isOpen}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Pedido</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Box as={motion.div}>\r\n                {props.shoppingCart.map((course) => (\r\n                  <ShoppingCartLine course={course} remove={props.remove} />\r\n                ))}\r\n\r\n                <SimpleGrid\r\n                  columns={[1, 2]}\r\n                  position=\"sticky\"\r\n                  bottom=\"1vh\"\r\n                  rounded=\"lg\"\r\n                  m=\"5\"\r\n                  spacing={2}\r\n                >\r\n                  <Button onClick={onClose}>Añadir más productos</Button>\r\n                  <Button colorScheme=\"green\">\r\n                    Pedir (${props.shoppingCart != [] ? total() : \"0\"}){\" \"}\r\n                  </Button>\r\n                </SimpleGrid>\r\n              </Box>\r\n            </ModalBody>\r\n            <ModalFooter></ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}